#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node*next,*prev;
}*head,*temp,*tail,*newnode,*front,*back;

void create()
{
   // printf("****creation***");
    int n;
    printf("ENTER SIZE: ");
    scanf("%d",&n);
    int c=1;
    for(int i=0;i<n;i++)
    {
        struct node*newnode=(struct node*)malloc(sizeof(struct node));
        scanf("\n%d",&newnode->data);
        newnode->next=NULL;
        newnode->prev=NULL;
        if(head==NULL)
        {
            head=temp=tail=newnode;
            newnode->prev=tail;
            newnode->next=head;

        }
        else
        {
           tail->next=newnode;
           newnode->prev=tail;
           newnode->next=tail;
           tail=tail->next;
           tail->next=head;
           head->prev=newnode;
        }
}
    display();
}
void display()
{
    temp=head;
    while(temp->next!=head)
    {
        printf("\n%d ",temp->data);
        temp=temp->next;
    }
    printf("\n%d",temp->data);
}
void ins_beg()
{
    //create(n);
    int val;
    printf("\n enter val to ins at the front: ");
    scanf("%d",&val);
    struct node*newnode = (struct node*)malloc(sizeof(struct node));
    newnode->data=val;
    newnode->prev=tail;
    newnode->next=head;
    head->prev=newnode;
    head=newnode;
    tail->next=head;
    //display();
}
void ins_end()
{
    int val;
    printf("enter the end val to ins: ") ;
    scanf("%d",&val);
    struct node*newnode=(struct node*)malloc(sizeof(struct node));
    newnode->data=val;
    newnode->next=head;
    newnode->prev=tail;
    tail->next=newnode;
    head->prev=newnode;
    tail=newnode;

}
void ins_mid()
{
    int val;
    printf("enter value: ");
    scanf("%d",&val);
    int pos;
    printf("enter pos: ");
    scanf("%d",&pos);
    struct node*newnode=(struct node*)malloc(sizeof(struct node));
    newnode->data=val;
    temp=head;
    for(int i=0;i<pos-1;i++)
    {
        temp=temp->next;
    }
    newnode->prev=temp;
    newnode->next=temp->next;
    temp->next=newnode;
    temp->next->next->prev=newnode;
}
void del_front()
{
   temp=head;
   head=head->next;
   head->prev=tail;
   tail->next=head;
}
/*void del_end()
{
    back=head;
    while(back->next!=head)
    {
        front=back;
        back=back->next;
    }
 front->next=back->next;
 head->prev=front;
 free(back);
}*/
void del_end()
{
    temp=tail->prev;
    temp->next=tail->next;
    head->prev=temp;
    free(tail);
}
void del_mid()
{
    int pos;
    printf("enter the pos u wnt to del: ");
    scanf("%d",&pos);
    temp=head;
    for(int i=0;i<pos-1;i++)
    {
        temp=temp->next;
    }
    temp->next=temp->next->next;
    temp->next->next->prev=temp;
}
void main()
{
    int c=1;
    while(c)
    {
        printf("\n ******circular doubly*********");
        printf("\n 1.create\n 2.display\n 3.ins_beg\n 4.ins_end\n 5.ins_mid\n 6.del_front\n 7.del_end\n 8.del_mid\n");
        int ch;
        printf("enter your choice: ");
        scanf("%d",&ch);
        switch(ch)
        {
            case 1: create();
                    break;
            case 2: display();
                    break;
            case 3: ins_beg();
                    break;
            case 4: ins_end();
                    break;
            case 5: ins_mid();
                    break;
            case 6: del_front();
                    break;
            case 7:del_end();
                    break;
            case 8:del_mid();
                   break;
            default: exit(0);
        }

    }
    printf("\nenter your operation(0/1): ");
        scanf("%d",&c);
}
